openapi: 3.0.3
info:
  title: API ME
  description: API ME
  version: 1.0.0
servers:
  - url: 'http://localhost:3000/api/latest/'

# Define common JSON data format
components:
  schemas:
    Result:
      type: "object"
      properties:
        result:
          type: "string"
        message:
          type: "string"
    UserInfo:
        type: "object"
        properties:
            userName:
              type: "string"
            password:
              type: "string"
            fullName:
              type: "string"
            email:
              type: "string"

tags:
  - name: Auth
    description: Authentication
  - name: Users
    description: User Management

paths:

  /users:
    post:
      description: "Create a new user"
      tags: [Users]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfo"

      responses:
        "200":
          description: "OK"
        "400":
          description: "Invalid username/password supplied"
        "500":
          description: "Internal server error"

  /users/{userName}:
    get:
        description: "Get user by userName"
        tags: [Users]
        parameters:
            - name: userName
              in: path
              description: "userName"
              required: true
              schema:
                  type: string
        responses:
            "200":
              description: "OK"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserInfo"
            "404":
              description: "User not found"
            "500":
              description: "Internal server error"

    put:
        description: "Update user by userName"
        tags: [Users]
        parameters:
            - name: userName
              in: path
              description: "userName"
              required: true
              schema:
                  type: string
        requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserInfo"
        responses:
            "200":
              description: "OK"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserInfo"
            "404":
              description: "User not found"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Result"
            "500":
              description: "Internal server error"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Result"
    delete:
        description: "Delete user by id"
        tags: [Users]
        parameters:
            - name: userName
              in: path
              description: "User id"
              required: true
              schema:
                  type: string
        responses:
            "200":
              description: "OK"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Result"
            "404":
              description: "User not found"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Result"
            "500":
              description: "Internal server error"
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Result"

  /auth/login:
    post:
      summary: "User Login"
      description: ""
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: "string"
                password:
                  type: "string"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Invalid name or data"
        "500":
          description: "Internal server error"